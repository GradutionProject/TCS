@model TrafficControlSystem.Models.LoginModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/themes/base")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/Content/dataTables")
    <style>
        body {
            padding-top: 40px;
            padding-bottom: 40px;
            background-color: #eee;
        }

        .form-signin {
            max-width: 330px;
            padding: 15px;
            margin: 0 auto;
        }

            .form-signin .form-signin-heading,
            .form-signin .checkbox {
                margin-bottom: 10px;
            }

            .form-signin .checkbox {
                font-weight: normal;
            }

            .form-signin .form-control {
                position: relative;
                height: auto;
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
                padding: 10px;
                font-size: 16px;
            }

                .form-signin .form-control:focus {
                    z-index: 2;
                }

            .form-signin input[type="email"] {
                margin-bottom: -1px;
                border-bottom-right-radius: 0;
                border-bottom-left-radius: 0;
            }

            .form-signin input[type="password"] {
                margin-bottom: 10px;
                border-top-left-radius: 0;
                border-top-right-radius: 0;
            }
    </style>
</head>
<body>
    <div class="container">
        @using (Html.BeginForm("Login", "Home", FormMethod.Post, htmlAttributes: new { @class = "form-signin" }))
        {
            Html.ValidationSummary();
            <h2 class="form-signin-heading">Please sign in</h2>
            
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "sr-only" })
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User Name", required = "required", autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "sr-only" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", required = "required" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            @*<input type="email" id="inputEmail" class="form-control" placeholder="Email address" required autofocus>
                <label for="inputPassword" class="sr-only">Password</label>
                <input type="password" id="inputPassword" class="form-control" placeholder="Password" required>*@

            <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
        }
           

    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/dataTables")
</body>
</html>
